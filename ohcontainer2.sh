docker network create $PROJECT_NAME

docker run -d \\
    --network $PROJECT_NAME \\
    -e 'ACCEPT_EULA=Y' \\
    -e 'SA_PASSWORD=$SQL_SA_PASS' \\
    --name '$SQL_SRV_NAME' \\
    -p 1433:1433 \\
    mcr.microsoft.com/mssql/server:2017-latest

sleep 20
docker ps
docker logs $SQL_SRV_NAME

docker exec $SQL_SRV_NAME /opt/mssql-tools/bin/sqlcmd \\
    -S localhost -U SA -P '$SQL_SA_PASS' \\
    -Q 'CREATE DATABASE $SQL_DB_NAME'

docker run -d \\
    --network $PROJECT_NAME \\
    --name dataload \\
    -e 'SQLFQDN=$SQL_SRV_NAME' \\
    -e 'SQLUSER=sa' \\
    -e 'SQLPASS=$SQL_SA_PASS' \\
    -e 'SQLDB=$SQL_DB_NAME' \\
    openhack/data-load:v1

# give some time for data to load
sleep 20
docker logs dataload

docker run -d \\
    --network $PROJECT_NAME \\
    -p 8080:80 \\
    --name poi \\
    -e 'SQL_PASSWORD=$SQL_SA_PASS' \\
    -e 'SQL_SERVER=$SQL_SRV_NAME' \\
    -e 'SQL_USER=sa' \\
    -e 'ASPNETCORE_ENVIRONMENT=Local' \\
    tripinsights/poi:1.0

docker run -d \\
    --network $PROJECT_NAME \\
    -p 8081:80 \\
    --name trips \\
    -e 'SQL_PASSWORD=$SQL_SA_PASS' \\
    -e 'SQL_SERVER=$SQL_SRV_NAME' \\
    -e 'SQL_USER=sa' \\
    -e 'OPENAPI_DOCS_URI=http://temp' \\
    tripinsights/trips:1.0

docker run -d \\
    --network $PROJECT_NAME \\
    -p 8082:80 \\
    --name user-java \\
    -e 'SQL_PASSWORD=$SQL_SA_PASS' \\
    -e 'SQL_SERVER=$SQL_SRV_NAME' \\
    -e 'SQL_USER=sa' \\
    tripinsights/user-java:1.0 

docker run -d \\
    --network $PROJECT_NAME \\
    -p 8083:80 \\
    --name userprofile \\
    -e 'SQL_PASSWORD=$SQL_SA_PASS' \\
    -e 'SQL_SERVER=$SQL_SRV_NAME' \\
    -e 'SQL_USER=sa' \\
    tripinsights/userprofile:1.0

docker ps